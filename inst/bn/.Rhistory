library(bnlearn)
data(marks)
ug = empty.graph(names(marks))
ug
arcs(ug, ignore.cycles = TRUE) = matrix(c("MECH", "VECT", "MECH", "ALG", "VECT", "MECH","VECT", "ALG", "ALG", "MECH", "ALG", "VECT","ALG", "ANL", "ALG", "STAT", "ANL", "ALG","ANL", "STAT", "STAT", "ALG", "STAT","ANL"),ncol = 2, byrow = TRUE,dimnames = list(c(), c("from","to")))
arcs(ug, ignore.cycles = TRUE) = matrix(c("MECH", "VECT", "MECH", "ALG", "VECT", "MECH","VECT", "ALG", "ALG", "MECH", "ALG", "VECT","ALG", "ANL", "ALG", "STAT", "ANL", "ALG","ANL", "STAT", "STAT", "ALG", "STAT", "ANL"),ncol = 2, byrow = TRUE,dimnames = list(c(), c("from", "to")))
arcs(ug) = matrix(c("MECH", "VECT", "MECH", "ALG", "VECT", "MECH","VECT", "ALG", "ALG", "MECH", "ALG", "VECT","ALG", "ANL", "ALG", "STAT", "ANL", "ALG","ANL", "STAT", "STAT", "ALG", "STAT", "ANL"),ncol = 2, byrow = TRUE,dimnames = list(c(), c("from", "to")))
ug
dag = empty.graph(names(marks))
arcs(dag) = matrix(
+ c("VECT", "MECH", "ALG", "MECH", "ALG", "VECT",
+ "ANL", "ALG", "STAT", "ALG", "STAT", "ANL"),
+ ncol = 2, byrow = TRUE,
+ dimnames = list(c(), c("from", "to")))
arcs(dag) = matrix(c("VECT", "MECH", "ALG", "MECH", "ALG", "VECT","ANL", "ALG", "STAT", "ALG", "STAT", "ANL"),ncol = 2, byrow = TRUE,dimnames = list(c(), c("from", "to")))
dag
BayesianNetwork::BayesianNetwork()
library("igraph")
help("igraph")
karate <- make_graph("Zachary")
karate
as_edgelist(karate)
write.csv(as_edgelist(karate),"Testing_Infomap.csv")
getwd()
g <- make_ring(10)
shortest_paths(g, 8, 2)
E(g)$weight <- seq_len(ecount(g))
g <- make_ring(100)
shortest_paths(g, 8, 2)
E(g)$weight <- seq_len(ecount(g))
as_edgelist(g)
data(package="igraph")
g <- make_graph("Zachary")
imc <- cluster_infomap(g)
membership(imc)
communities(imc)
write.csv(as_edgelist(g),"testing_infomap.csv",row.names=FALSE)
write.table(as_edgelist(g),"testing_infomap.txt",sep="\t",row.names=FALSE)
length(communities((imc))[1])
length(communities((imc))[[1]])
length(communities((imc))[[2]])
setwd("E:/ShubhamMMSEC/BTP/ShinyBN/inst/bn")
a = readRDS('a.RData')
save(a,'a.RData')
save(a,file ='a.RData')
a = readRDS('iris.RData')
save(a,file ='iris.RData')
a = readRDS('newdata.RData')
save(a,file ='newdata.RData')
a = readRDS('newdatastructure.RData')
save(a,file ='newdatastructure.RData')
